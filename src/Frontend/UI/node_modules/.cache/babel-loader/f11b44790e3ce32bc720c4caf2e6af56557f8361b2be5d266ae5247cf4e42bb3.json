{"ast":null,"code":"var _jsxFileName = \"D:\\\\web-tutrial\\\\src\\\\MessageApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport 'whatwg-fetch';\nimport \"./Message.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageApp = ({\n  activeMember\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [sender, setSender] = useState(\"Me\");\n\n  /*useEffect(() => {\r\n    fetch(\"https://localhost:7038/api/ChatCtl\", {\r\n      method: \"GET\",\r\n      mode: 'cors', // CORS 対応のための設定\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setMessages(data))\r\n      .catch((error) => console.error(\"Error fetching messages:\", error));\r\n  }, []);*/\n  const handleMessageSend = () => {\n    if (inputValue.trim() !== \"\") {\n      const newMessage = {\n        text: inputValue,\n        sender: sender\n      };\n      fetch(`http://localhost:3000/api/ChatCtl?message=${inputValue}&room=0`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n        // body: JSON.stringify(newMessage),\n      }).then(response => response.json()).then(json => setMessages(json)).then(data => {\n        setMessages([...messages, data]);\n        setInputValue(\"\");\n        if (sender === \"Me\") {\n          setSender(\"You\");\n        } else {\n          setSender(\"Me\");\n        }\n      }).catch(error => console.error(\"Error sending message:\", error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), \" \", message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        className: \"input-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMessageSend,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageApp, \"GnUOMsuk4wY1ATT8Ho0zX/4cNlI=\");\n_c = MessageApp;\nexport default MessageApp;\nvar _c;\n$RefreshReg$(_c, \"MessageApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MessageApp","activeMember","_s","messages","setMessages","inputValue","setInputValue","sender","setSender","handleMessageSend","trim","newMessage","text","fetch","method","headers","then","response","json","data","catch","error","console","children","className","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/web-tutrial/src/MessageApp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport 'whatwg-fetch';\r\nimport \"./Message.css\";\r\n\r\nconst MessageApp = ({ activeMember }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [sender, setSender] = useState(\"Me\");\r\n\r\n  /*useEffect(() => {\r\n    fetch(\"https://localhost:7038/api/ChatCtl\", {\r\n      method: \"GET\",\r\n      mode: 'cors', // CORS 対応のための設定\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setMessages(data))\r\n      .catch((error) => console.error(\"Error fetching messages:\", error));\r\n  }, []);*/\r\n  const handleMessageSend = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      const newMessage = {\r\n        text: inputValue,\r\n        sender: sender,\r\n      };\r\n      fetch(`http://localhost:3000/api/ChatCtl?message=${inputValue}&room=0`, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        // body: JSON.stringify(newMessage),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json)=>setMessages(json))\r\n        .then((data) => {\r\n          setMessages([...messages, data]);\r\n          setInputValue(\"\");\r\n          if (sender === \"Me\") {\r\n            setSender(\"You\");\r\n          } else {\r\n            setSender(\"Me\");\r\n          }\r\n        })\r\n        .catch((error) => console.error(\"Error sending message:\", error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"message-container\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className=\"message\">\r\n            <strong>{message.sender}: </strong> {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          className=\"input-text\"\r\n        />\r\n        <button onClick={handleMessageSend} className=\"send-button\">\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}