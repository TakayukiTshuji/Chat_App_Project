{"ast":null,"code":"var _jsxFileName = \"D:\\\\web-tutrial\\\\src\\\\MessageApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Message.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction setCookie(name, value, days) {\n  const expirationDate = new Date();\n  expirationDate.setDate(expirationDate.getDate() + days);\n  const cookie = `${name}=${value}; expires=${expirationDate.toUTCString()}; path=/`;\n  document.cookie = cookie;\n}\n\n//--------\n/*GETを行う*/\n//--------\nconst MessageApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [usermessages, setUserMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [sender, setSender] = useState([]);\n  const getMessages = () => {\n    fetch('https://localhost:7038/api/ChatCtl?room=0', {\n      credentials: 'include'\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      const stermessa = data.result.map(item => item.message);\n      const stersender = data.result.map(item => item.user);\n      setUserMessages([...usermessages, ...stermessa]);\n      setSender([...sender, ...stersender]);\n      if (data.status && Array.isArray(data.result)) {\n        console.log(\"stermessa:\", data); // resultの中身をログに表示\n      } else {\n        console.error(\"Invalid data format:\", data);\n      }\n      console.log(\"Response data:\", data);\n    }).catch(error => {\n      console.log(\"Error feth\", error);\n    });\n  };\n\n  //\n  //レンダリングを行う\n  //\n  useEffect(() => {\n    getMessages();\n  }, []);\n  const setSessionCookie = sessionId => {\n    setCookie(\"session_id\", sessionId, 30); // 有効期限は7日間\n  };\n\n  //----------\n  /*POSTを行う*/\n  //----------\n  const handleMessageSend = () => {\n    const newMessage = {\n      \"message\": inputValue,\n      \"room\": 0\n    };\n    fetch(`https://localhost:7038/api/ChatCtl?message=${inputValue}&room=0`, {\n      method: 'POST',\n      credentials: 'include',\n      //sameoriginはクロスリジンには送信しない。\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n        //\"Cookie\": \"session_id=<65cc897e-6225-4e14-b788-fdf7d2da24a2>\",\n        // 'Access-Control-Allow-Origin': 'http://localhost:7038',\n        // 'Access-Control-Request-Method': 'POST',\n        // 'Access-Control-Allow-Credentials':'true',\n      },\n\n      body: JSON.stringify(newMessage)\n    }).then(response => {\n      // サーバーからのレスポンスヘッダーに含まれるCookieを取得\n      const sessionCookie = response.headers.get('session_id');\n      if (sessionCookie) {\n        // クッキーが存在する場合、セッションクッキーを設定\n        setSessionCookie(sessionCookie);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"data\", data);\n      const extractedMessage = data.result.message;\n      const extrasender = data.result.user;\n      setMessages([...messages, extractedMessage]);\n      setInputValue(\"\");\n      setSender([...sender, extrasender]);\n      console.table(data);\n    }).catch(error => {\n      console.error(\"Error sending message:\", error);\n    });\n  };\n\n  //\n  //表示させる\n  //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: [messages.map((message, user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [user, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)), usermessages.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"You:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        className: \"input-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMessageSend,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageApp, \"V9bU54ZrxcW3A8fsX0rYFQRUbsM=\");\n_c = MessageApp;\nexport default MessageApp;\nvar _c;\n$RefreshReg$(_c, \"MessageApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","setCookie","name","value","days","expirationDate","Date","setDate","getDate","cookie","toUTCString","document","MessageApp","_s","messages","setMessages","usermessages","setUserMessages","inputValue","setInputValue","sender","setSender","getMessages","fetch","credentials","then","response","json","data","stermessa","result","map","item","message","stersender","user","status","Array","isArray","console","log","error","catch","setSessionCookie","sessionId","handleMessageSend","newMessage","method","headers","body","JSON","stringify","sessionCookie","get","extractedMessage","extrasender","table","children","className","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/web-tutrial/src/MessageApp.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport \"./Message.css\";\r\n\r\nfunction setCookie(name, value, days) {\r\n  const expirationDate = new Date();\r\n  expirationDate.setDate(expirationDate.getDate() + days);\r\n  const cookie = `${name}=${value}; expires=${expirationDate.toUTCString()}; path=/`;\r\n  document.cookie = cookie;\r\n}\r\n\r\n//--------\r\n/*GETを行う*/\r\n//--------\r\nconst MessageApp = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [usermessages, setUserMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [sender, setSender] = useState([]);\r\n\r\n  const getMessages= ()=>{\r\n    fetch('https://localhost:7038/api/ChatCtl?room=0',{\r\n      credentials:'include',\r\n    })\r\n    .then((response)=>{\r\n      return response.json();\r\n    })\r\n    .then((data)=>{\r\n      const stermessa=data.result.map(item=>item.message);\r\n      const stersender=data.result.map(item=>item.user);\r\n      setUserMessages([...usermessages,...stermessa]);\r\n      setSender([...sender,...stersender]);\r\n      if (data.status && Array.isArray(data.result)) {\r\n        console.log(\"stermessa:\",data); // resultの中身をログに表示\r\n      } else {\r\n        console.error(\"Invalid data format:\", data);\r\n      }\r\n      console.log(\"Response data:\", data);\r\n    })\r\n    .catch((error)=>{console.log(\"Error feth\",error)})\r\n  };\r\n\r\n  //\r\n  //レンダリングを行う\r\n  //\r\n  useEffect(() => {\r\n    getMessages();\r\n  }, []);\r\n\r\n  const setSessionCookie = (sessionId) => {\r\n    setCookie(\"session_id\", sessionId, 30); // 有効期限は7日間\r\n  };\r\n\r\n  //----------\r\n  /*POSTを行う*/\r\n  //----------\r\n  const handleMessageSend = () => {\r\n    const newMessage = {\r\n      \"message\":inputValue,\r\n      \"room\":0\r\n    };\r\n\r\n    fetch(`https://localhost:7038/api/ChatCtl?message=${inputValue}&room=0`, {\r\n      method: 'POST',\r\n      credentials:'include',//sameoriginはクロスリジンには送信しない。\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\",\r\n        //\"Cookie\": \"session_id=<65cc897e-6225-4e14-b788-fdf7d2da24a2>\",\r\n        // 'Access-Control-Allow-Origin': 'http://localhost:7038',\r\n        // 'Access-Control-Request-Method': 'POST',\r\n        // 'Access-Control-Allow-Credentials':'true',\r\n      },\r\n      body: JSON.stringify(newMessage),\r\n      \r\n    })\r\n    .then((response) => {\r\n      // サーバーからのレスポンスヘッダーに含まれるCookieを取得\r\n      const sessionCookie = response.headers.get('session_id');\r\n      if (sessionCookie) {\r\n        // クッキーが存在する場合、セッションクッキーを設定\r\n        setSessionCookie(sessionCookie);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(\"data\",data);\r\n      const extractedMessage = data.result.message;\r\n      const extrasender=data.result.user;\r\n      setMessages([...messages,extractedMessage]);\r\n      setInputValue(\"\");\r\n      setSender([...sender,extrasender]);\r\n      console.table(data);\r\n    })\r\n    .catch((error) => {console.error(\"Error sending message:\", error)});\r\n  };\r\n\r\n  //\r\n  //表示させる\r\n  //\r\n  return (\r\n    <div>\r\n      <div className=\"message-container\">\r\n        {messages.map((message,user,index) => (\r\n            <div key={index} className=\"message\">\r\n              <strong>{user}: </strong> <p>{message}</p>\r\n            </div>\r\n        ))}\r\n        {usermessages.map((data,index)=>(\r\n            <div key={index} className=\"message\">\r\n              <strong>You:</strong> <p>{data}</p>\r\n            </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          className=\"input-text\"\r\n        />\r\n        <button onClick={handleMessageSend} className=\"send-button\">\r\n          Send\r\n        </button>        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}