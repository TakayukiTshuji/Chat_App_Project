{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_dev\\\\web-tutrial\\\\src\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\n//import MessageApp from './MessageApp';\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const [room, setroom] = useState([]);\n  const [unionRoom, setunionRoom] = useState([]);\n  const [cookies, setCookie, removeCookie] = useCookies(['session_id']);\n  const navigate = useNavigate();\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  let roomNameID = [];\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      // messagesEndRef.current が null でないことを確認\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\"\n      });\n    }\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      getRoom();\n    }, 5000);\n    //テスト用\n  }, []);\n  const getRoom = () => {\n    fetch(`https://localhost:7038/api/ChatRoomCtl`, {\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(\"successRoomData:\", data);\n      const roomName = data.result.map(e => e.name);\n      roomNameID = data.result.map(e => e.room_id);\n      //console.log(roomNameID);\n      setroom([...roomName]);\n      setunionRoom([...roomName]);\n    }).catch(error => {\n      console.log(\"error:\", error);\n    }).finally(() => scrollToBottom());\n  };\n  const handleRoomClick = roomid => {\n    const Romnum = unionRoom.indexOf(roomid);\n    if (Romnum !== -1) {\n      console.log(\"成功\");\n    } else {\n      console.log(\"ありませんでした。\");\n    }\n\n    //roomidは名前だけ取っているので、これがどこの番号か知りたい\n    console.log(roomid);\n    navigate('/chat', {\n      state: {\n        name: Romnum\n      }\n    });\n  };\n  const changeAddRom = () => {\n    navigate('/AddGroup');\n  };\n  const Logout = () => {\n    removeCookie('sessionId');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Logout,\n      children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeAddRom,\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRoom,\n      children: \"\\u66F4\\u65B0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: room.map((data, index) => /*#__PURE__*/_jsxDEV(motion.button, {\n          initial: {\n            opacity: 1\n          } // 初期状態\n          ,\n          exit: {\n            opacity: 0\n          } // アンマウント時\n          ,\n          onClick: () => handleRoomClick(data),\n          style: {\n            display: selectedRoom === data ? 'none' : 'block'\n          } // 選択されたルームは非表示にする\n          ,\n          children: data\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"4dO4ZObZXz7hAzC9OStx6kA3m7A=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCookies","useNavigate","motion","AnimatePresence","jsxDEV","_jsxDEV","Room","_s","messagesEndRef","room","setroom","unionRoom","setunionRoom","cookies","setCookie","removeCookie","navigate","selectedRoom","setSelectedRoom","roomNameID","scrollToBottom","current","scrollIntoView","behavior","block","setTimeout","getRoom","fetch","credentials","headers","then","response","json","data","console","log","roomName","result","map","e","name","room_id","catch","error","finally","handleRoomClick","roomid","Romnum","indexOf","state","changeAddRom","Logout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","button","initial","opacity","exit","style","display","_c","$RefreshReg$"],"sources":["D:/React_dev/web-tutrial/src/Room.js"],"sourcesContent":["import React, {useState,useRef, useEffect}from 'react';\r\n//import MessageApp from './MessageApp';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion,AnimatePresence } from 'framer-motion';\r\n\r\nconst Room = () => {\r\n    const messagesEndRef = useRef(null);\r\n    const [room,setroom]=useState([]);\r\n    const [unionRoom,setunionRoom]=useState([]);\r\n    const [cookies,setCookie,removeCookie]=useCookies(['session_id']);\r\n    const navigate = useNavigate();\r\n    const [selectedRoom, setSelectedRoom] = useState(null);\r\n\r\n    let roomNameID=[];\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        if (messagesEndRef.current) {  // messagesEndRef.current が null でないことを確認\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            getRoom();\r\n        },5000);\r\n        //テスト用\r\n    },[])\r\n\r\n    const getRoom=()=>{\r\n        fetch(`https://localhost:7038/api/ChatRoomCtl`,{\r\n            credentials:'include',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            return response.json();\r\n        })\r\n        .then((data)=>{\r\n            console.log(\"successRoomData:\",data);\r\n            const roomName=data.result.map(e=>e.name);\r\n            roomNameID=data.result.map(e=>e.room_id);\r\n            //console.log(roomNameID);\r\n            setroom([...roomName]);\r\n            setunionRoom([...roomName]);\r\n        })\r\n        .catch((error)=>{console.log(\"error:\",error)})\r\n        .finally(()=>scrollToBottom());\r\n    }\r\n\r\n    const handleRoomClick=(roomid)=>{\r\n        const Romnum=unionRoom.indexOf(roomid);\r\n        if((Romnum!==-1)){\r\n            console.log(\"成功\")\r\n        }else{\r\n            console.log(\"ありませんでした。\");\r\n        }\r\n        \r\n        //roomidは名前だけ取っているので、これがどこの番号か知りたい\r\n        console.log(roomid);\r\n        navigate('/chat',{state:{name:Romnum}});\r\n    }\r\n    const changeAddRom=()=>{\r\n        navigate('/AddGroup');\r\n    }\r\n    const Logout=()=>{\r\n        removeCookie('sessionId');\r\n        navigate('/');\r\n      }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Room</h1>\r\n            <button onClick={Logout}>ログアウト</button>\r\n            <button onClick={changeAddRom}>追加</button>\r\n            <button onClick={getRoom}>更新</button>\r\n            <div>\r\n                <AnimatePresence>\r\n                        {room.map((data, index) => (\r\n                            <motion.button\r\n                                key={index}\r\n                                initial={{ opacity: 1 }} // 初期状態\r\n                                exit={{ opacity: 0 }}    // アンマウント時\r\n                                onClick={() => handleRoomClick(data)}\r\n                                style={{ display: selectedRoom === data ? 'none' : 'block' }} // 選択されたルームは非表示にする\r\n                            >\r\n                                {data}\r\n                            </motion.button>\r\n                        ))}\r\n                    </AnimatePresence>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}